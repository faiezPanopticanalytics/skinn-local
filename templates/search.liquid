<div class="collection_page container-fluid" id="{{collection.handle}}">
  <div class="header">
    <h2>{{ search.results_count }} results for {{ search.terms }}</h2>
  </div>
  
  <div class="container custom-topbar">
    <div class="row">
      <div class="products col-12">
        <transition name="slide">
            <div class="row product_loop" v-if="!loading">
              <div class="col-6 col-md-3" v-for="product in products">
                <product-list :product-handle="product" :settings="settings" full-url="{{shop.url}}{{product.url}}" permanent-domain="{{ shop.permanent_domain | escape }}" />
              </div>
              <div class="col-12 pagination">
                <paginator 
                  :total-pages="pagination.total_pages"
                  :total="pagination.total_products"
                  :per-page="20"
                  :current-page="pagination.current_page"
                  @pagechanged="changePage"
                />
              </div>
            </div>
            <div class="loader text-center" v-else>
              <div class="lds-ring mx-auto"><div></div><div></div><div></div><div></div></div>
            </div>
        </transition>
      </div>
    </div>

  </div>
</div>

<script>
  function initVue() {
  let theme_settings = {{ settings | json }};
  let search_query = {{ search.terms | json }};
  let search_type = {{ search.types | json }}
  let api;
  
  new Vue({
    el: ".collection_page",
    delimiters: ["@{", "}"],
    data: {
        products: [],
        loading: true,
        pagination: {},
        settings: theme_settings,
        Yotpo: [],
        terms: search_query,
        types: search_type
    },
    mounted() {
      this.getFirstPage();
    },
    watch: {
      sort_by(newVal, oldVal) {
        if(newVal != oldVal) {
          this.getFirstPage();
        }
      }
    },
    methods: {
      getFirstPage() {
        const vm = this;
        vm.loading = true;
        window.axios.get('/search?q='+ this.terms +'&type='+ this.types +'&view=json').then(d => {
          let {
            pagination,
            products
          } = d.data;
          
          vm.products = products;
          vm.pagination = pagination
          
          this.$nextTick(function () {
            vm.loading = false;
          })
        })
      },
      changePage(page) {
        this.loading = true;
        const vm = this;
        
        window.axios.get('/search?q='+ this.terms +'&type='+ this.types +'&view=json&page='+page).then(d => {
          let {
            pagination,
            products
          } = d.data;
          
          vm.products = products;
          vm.pagination.current_page = page;
          
          this.$nextTick(function () {
            vm.loading = false;
          })
        })
      }
    }
  })
}

window.addEventListener('DOMContentLoaded', initVue);
</script>
